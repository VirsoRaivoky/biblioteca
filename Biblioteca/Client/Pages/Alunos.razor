@page "/alunos"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h2 class="display-2"> Lista de Alunos</h2>

<div class="info">
    <Alert Color="AlertColor.Primary">
        <h4 class="alert-heading"><Icon Name="IconName.InfoCircleFill" class="me-2"> </Icon> Sobre a página</h4>
        <p>
            A página contém informações sobre os alunos registrados no sistema, você pode ver informações adicionais como número
            e email clicando no <strong>nome de algum aluno.</strong> Caso seja preciso alterar alguma informação, clique no botão <strong> "Editar" </strong>
        </p>
    </Alert>
</div>

<div class="createButton">
    <button @onclick="AddAluno" class="btn btn-primary btn-lg">
        <Icon Name="IconName.PersonAdd" /> Adicionar Aluno
    </button>
</div>

<div class="alunos">
    <div class="alunoDados">
        <Grid @ref="grid"
              TItem="Aluno"
              Class="table table-hover table-bordered table-striped"
              DataProvider="AlunosDataProvider"
              AllowFiltering="true"
              AllowPaging="true"
              AllowSorting="true"
              PageSize="5"
              PageSizeSelectorItems="@(new int[] { 5,10,20 })"
              PaginationItemsTextFormat="{0} - {1} itens de {2}"
              ItemsPerPageText="Itens por página"
              Responsive="true"
              FiltersRowCssClass="bg-primary text-white bg-opacity-25 border-bottom-0"
              HeaderRowCssClass="bg-primary text-white border-bottom-0">

            <GridColumn TItem="Aluno" HeaderText="Nome" SortKeySelector="@(item => item.Name)" PropertyName="Name" IsDefaultSortColumn="true" Sortable=true >
                @context.Name
            </GridColumn>
            <GridColumn TItem="Aluno" HeaderText="Serie"  PropertyName="Serie" >
                @context.Serie
            </GridColumn>
            <GridColumn TItem="Aluno" HeaderText="Turma" SortKeySelector="@(item => item.Turma)" PropertyName="Turma" Sortable=true>
                @context.Turma
            </GridColumn>
            <GridColumn TItem="Aluno" HeaderText="Ações" Filterable=false>
                <Button Color="ButtonColor.Primary" TooltipTitle="Ver Mais" @onclick="() => EditAluno(context.Id)"> <Icon Name="IconName.InfoCircle"></Icon></Button>
            </GridColumn>
        </Grid>
    </div>
</div>

@code {
    private BlazorBootstrap.Grid<Aluno>? grid;

    private IEnumerable<Aluno>? alunos;

    private async Task<GridDataProviderResult<Aluno>> AlunosDataProvider(GridDataProviderRequest<Aluno> request)
    {
        if (alunos is null)
        {
            var result = await Http.GetFromJsonAsync<List<Aluno>>("api/aluno");
            if (result != null)
                alunos = result;
        }

        if (alunos != null)
        {
            return await Task.FromResult(request.ApplyTo(alunos));
        }
        else
        {
            return await Task.FromResult(new GridDataProviderResult<Aluno>());
        }
    }

     void AddAluno()
    {
        NavigationManager.NavigateTo("/aluno");
    }

    void EditAluno(int id)
    {
        NavigationManager.NavigateTo($"/aluno/{id}");
    }


}
